  
  [1X1 [33X[0;0YThe [22X3k+1[122X[101X[1X Problem[133X[101X
  
  
  [1X1.1 [33X[0;0YIntroduction[133X[101X
  
  [33X[0;0YThis package provides calculations with Origamis. An Origami can be obtained
  in the following way from two permutations [22XÏƒ_a, Ïƒ_b âˆˆ S_d[122X. We take [22Xd[122X Squares
  [22XQ_1,  dots, Q_d[122X and clue the lower side of [22XQ_i[122X to the upper side of [22XQ_Ïƒ_y(i)[122X
  and  the  right side of [22XQ_i[122X to the left side of [22XQ_Ïƒ_x(i)[122X. So in this Package
  we identify an Origami with a pair of permutations, witch acts transitive on
  [22X{1  dots  d}[122X  up  to  simultan  conjugation.  We store an Origami as Origami
  object.  We are mainly interested in the Veechgroup of an Origami. It can be
  shown  that  the Veechgroup of an Origami is a subgroup of [22XSl_2(Z)[122X of finite
  index. So we fix two generators[133X
  
  
  [24X[33X[0;6YS = \left( {\begin{array}{cc} 0 & -1 \\ 1 & 0 \\ \end{array} } \right)[133X
  
  [124X
  
  [33X[0;0Yand[133X
  
  
  [24X[33X[0;6YT = \left( {\begin{array}{cc} 1 & 1 \\ 0 & 1 \\ \end{array} } \right).[133X
  
  [124X
  
  
  [1X1.2 [33X[0;0YThe Free Group[133X[101X
  
  [33X[0;0YIn this package we fix the Free Group [22XF[122X generated by [22XS[122X and [22XT[122X.[133X
  
  
  [1X1.3 [33X[0;0YThe Origmai Object[133X[101X
  
  [33X[0;0YIn this section we describe the main function of this package.[133X
  
  [1X1.3-1 ActionOfSl[101X
  
  [29X[2XActionOfSl[102X( [3Xword[103X, [3XOrigami[103X ) [32X function
  
  [33X[0;0YThis function lets act a word in the free group [22XGroup(S, T)[122X ,representing an
  element of [22XSl_2 (Z)[122X on an Origami and returns [22Xword.Origami[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XActionOfSl(S*T,Origami((1,3,5), (1,3)(2,4,5), 5));[127X[104X
    [4X[28XOrigami((1,3)(2,5,4), (2,4,5,3), 5)[128X[104X
  [4X[32X[104X
  
  [29X[2XActionOfF2ViaCanonical[102X( [3XOrigami[103X, [3Xword[103X ) [32X function
  
  [33X[0;0YThis  lets act a word in the free group [22XGroup(S, T)[122X, representing an element
  of  [22XSl_2(Z)[122X,  on  an  Origami  and  returns [22Xword.Origami[122X. But in contrast to
  [2XActionOfSl[102X  the result is stored in the canonical representation. ATTENTION:
  the order of arguments is here reserved.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X  gap> ActionOfF2ViaCanonical(Origami((1,2), (1,3), 3), S);[128X[104X
    [4X[28XOrigami((1,2), (2,3), 3)[128X[104X
    [4X[28X  [128X[104X
  [4X[32X[104X
  
  [29X[2XRightActionOfF2ViaCanonical[102X( [3XOrigami[103X, [3Xword[103X ) [32X function
  
  [33X[0;0YThis  lets act a word in the free group [22XGroup(S, T)[122X on an Origami from right
  and  returns  [22XOrigami.word  =  word^-1.Origami[122X, where the left action is the
  common  action  of  [22XSl_2(Z)[122X  on  2  mannifolds.  This  action  has  the same
  Veechgroup  and  orbits  as  the  left action. In contrast to [2XActionOfSl[102X the
  result  is  stored  in the canonical representation. ATTENTION: the order of
  arguments is here reserved.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XRightActionOfF2ViaCanonical(Origami((2,3), (1,3,2), 3),T);[127X[104X
    [4X[28XOrigami((1,2), (2,3), 3)[128X[104X
    [4X[28X [128X[104X
  [4X[32X[104X
  
  [29X[2XCanonicalOrigamiViaDelecroixAndStart[102X( [3XOrigami[103X, [3Xstart[103X ) [32X function
  
  [33X[0;0YThis  calculates  a  canonical  representation  of an origami depending on a
  given  number  start  (Between  1  and  the  degree  of  of the Origami). To
  determine  a  canonical  numbering  the  algorithm starts at the square with
  number  start  and  walks  over the origami in a certain way and numbers the
  squares  in  the  order,  they  are  visited  . First it walks in horizontal
  direction  one  loop. Then it walks one step up (in vertical direection) and
  then  again  a  loop in horizontal direction. This wil be repeated until the
  vertical  loop  is  complete  or all squares have been visited. If there are
  unvisited  squares,  we  continue  with  the  smallest  number  (in  the new
  numbering),  that  has not been in a vertical loop. An Origami is connected,
  so  that  number exists. Two origamis are equal if they are described by the
  same permutations in their canonical representation.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XCanonicalOrigamiViaDelecroixAndStart(Origami((1,10,7,6,8,9,2)(4,5),[127X[104X
    [4X[25Xgap>[125X [27X(1,8,5,4)(2,10,6)(3,9,7), 10), 1);[127X[104X
    [4X[28XOrigami((1,2,3,4,5,6,7)(8,9), (1,5,8,9)(2,4,7)(3,10,6), 10)[128X[104X
  [4X[32X[104X
  
  [29X[2XCanonicalOrigamiViaDelecroix[102X( [3XOrigami[103X ) [32X function
  
  [33X[0;0YThis  calculates a canonical representation of an origami. It calculates the
  representation  from CanonicalOrigamiViaDelecroixAndStart with several start
  squares,  independent of the given representation. Then it takes the minimum
  with  respect to some order. Two origamis are equal if they are described by
  the same permutations in their canonical representation.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XCanonicalOrigamiViaDelecroix(Origami((1,10,7,6,8,9,2)(4,5), (1,8,5,4)(2,10,6)(3,9,7), 10));[127X[104X
    [4X[28XOrigami((2,3,4,5,6,7,8)(9,10), (1,2,6)(3,5,7)(4,8,9,10), 10)[128X[104X
  [4X[32X[104X
  
  [29X[2XCanonicalOrigami[102X( [3XOrigami[103X ) [32X function
  
  [33X[0;0YThis  calculates  a canonical representation of an origami. Two origamis are
  equal  if  they  are  described  by the same permutations in their canonical
  representation. This is an older slower Version.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X  gap> CanonicalOrigami(Origami((1,10,7,6,8,9,2)(4,5), (1,8,5,4)(2,10,6)(3,9,7), 10));[128X[104X
    [4X[28XOrigami((1,2)(3,4,5,6,7,8,9), (1,2,3,7)(4,6,9)(5,10,8), 10)[128X[104X
  [4X[32X[104X
  
  [29X[2XOrigamiFamily[102X[32X family
  
  [33X[0;0YThe only sense of this Familiy is, that Origami does not fit in any other[133X
  
  [29X[2XHorizontalPerm[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis returns the vertical permutation [22XÏƒ_y[122X of the Origami.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> HorizontalPerm(Origami((1,3,5), (1,3)(2,4,5), 5));[128X[104X
    [4X[28X(1,3,5)[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2XVerticalPerm[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis returns the horizontal permutation [22XÏƒ_x[122X of the Origami.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> VerticalPerm( Origami((1,3,5), (1,3)(2,4,5), 5));[128X[104X
    [4X[28X            (1,3)(2,4,5)[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2XDegreeOrigami[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis returns the degree of an Origami.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> DegreeOrigami(Origami((1,3,5), (1,3)(2,4,5), 5));[128X[104X
    [4X[28X5[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2XStratum[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis  calculates  the stratum of an Origami. That is a list of the orders of
  the singularities[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> Stratum(Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8));[128X[104X
    [4X[28X[ 1, 5 ][128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2XGenus[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis calculates the genus of the Origami surface.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> Genus( Origami((1,2,3,4),(1,2)(3,4), 4) );[128X[104X
    [4X[28X2[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2XVeechGroup[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis  calculates the Veechgroup of an Origami. This is a subgroup of [22XSl_2(Z)[122X
  of   finite  degree.  The  group  is  stored  as  ModularSubgroup  from  the
  [5XModularSubgroup[105X   package.  The  Veechgroup  is  represented  as  the  coset
  permutations  [22XÏƒ_S[122X and [22XÏƒ_T[122X with respect to the generators [22XS[122X and [22XT[122X. This means
  if  [22Xi[122X  is  the  integer  associated  to the rigth coset [22XG[122X (Cosets( O ) [ i ]
  VeechGroup  = H) then we have for the coset [22XH[122X, associated to [22XÏƒ_S(i)[122X, that [22XSG
  =  H[122X.  Dito for [22XÏƒ_T[122X. You get the coset Permutations from the ModularSubgroup
  like in the following Example.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XSAction(VeechGroup(Origami((1,2,5)(3,4,6), (1,2)(5,6), 6)));[127X[104X
    [4X[28X(1,3)(2,5)(4,7)(6,8)(9,10)[128X[104X
    [4X[25Xgap>[125X [27XTAction(VeechGroup(Origami((1,2,5)(3,4,6), (1,2)(5,6), 6)));[127X[104X
    [4X[28X(1,2,4)(3,6)(5,8,7,9,10)[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2XCosets[102X( [3XOrigami[103X ) [32X attribute
  
  [33X[0;0YThis  Calculates the right cosets of the Veechgroup of an Origami as list of
  words in [22XS[122X and [22XT[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> Cosets(Origami((1,2,5)(3,4,6), (1,2)(5,6), 6));[128X[104X
    [4X[28X[ < identity ...>, T, S, T^2, T*S, S*T, T^2*S, T*S*T, T^2*S*T, T^2*S*T^2 ][128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [29X[2X[102X( [3XOrigami1[103X, [3XOrigami2[103X ) [32X function
  
  [33X[0;0YThis  tests  wether  Origami1 is equal up to Origami2 up to numbering of the
  squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XEquivalentOrigami(Origami((1,4)(2,6,3), (1,5)(2,3,6,4), 6), Origami((1,4,3)(2,5), (1,5,3,4)(2,6), 6));[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[28X[128X[104X
    [4X[25Xgap>[125X [27XEquivalentOrigami(Origami((1,4)(2,6,3), (1,5)(2,3,6,4), 6), Origami((1,2,5)(3,4,6), (1,2)(5,6), 6));[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
