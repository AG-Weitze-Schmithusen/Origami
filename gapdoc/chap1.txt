  
  [1X1 [33X[0;0YThe Veechgroup of Origamis[133X[101X
  
  
  [1X1.1 [33X[0;0YIntroduction[133X[101X
  
  [33X[0;0YThis  package provides calculations with origamis. An origami (also known as
  square-tiled  surface)  is a finite covering of a torus which is ramified at
  most  over  one  point.  It  can  be described in the following way from two
  permutations  [22XÏƒ_x,  Ïƒ_y âˆˆ S_d[122X. We take [22Xd[122X squares [22XQ_1, dots, Q_d[122X and glue the
  lower side of [22XQ_i[122X to the upper side of [22XQ_Ïƒ_y(i)[122X and the right side of [22XQ_i[122X to
  the  left side of [22XQ_Ïƒ_x(i)[122X. We require origamis to be connected and thus the
  group  generated  by  [22XÏƒ_x[122X  and  [22XÏƒ_y[122X acts transitively on [22X{1,dots,d}[122X. In this
  package  we  identify  an  origami  with  a pair of permutations, which acts
  transitively  on [22X{1, dots, d}[122X up to simultaneous conjugation. We introduce a
  new  type of origamis, namely origami objects, which are created by this two
  permutations  and  its  degree.  The  degree  of an origami is the number of
  squares.  Origamis  are  stored as such objects. We are mainly interested in
  the  Veechgroup  of  an  origami.  It can be shown that the Veechgroup of an
  origami  is  a subgroup of [22XSL_2(Z)[122X of finite index. So we fix two generators
  of [22XSL_2(Z)[122X[133X
  
  
  [24X[33X[0;6YS = \left( {\begin{array}{cc} 0 & -1 \\ 1 & 0 \\ \end{array} } \right)[133X
  
  [124X
  
  [33X[0;0Yand[133X
  
  
  [24X[33X[0;6YT = \left( {\begin{array}{cc} 1 & 1 \\ 0 & 1 \\ \end{array} } \right).[133X
  
  [124X
  
  
  [1X1.2 [33X[0;0YThe Free Group[133X[101X
  
  [33X[0;0YIn  this  package we fix the free group [22XF[122X generated by [22XtildeS[122X and [22XtildeT[122X. We
  consider  the  canonical  epimorphism  [22XÏ€:  F->  SL_2(Z)[122X with [22XÏ€(tildeS)=S[122X and
  [22XÏ€(tildeT)=T[122X.[133X
  
  
  [1X1.3 [33X[0;0YThe Origami Object[133X[101X
  
  [33X[0;0YIn this section we describe the main functions of this package.[133X
  
  [1X1.3-1 Origami[101X
  
  [33X[1;0Y[29X[2XOrigami[102X( [3XpermX[103X, [3Xpermy[103X, [3Xd[103X ) [32X function[133X
  
  [33X[0;0YThis  function  generates  a  new  origami object with [22XÏƒ_x =[122X [3X permX [103X, [22XÏƒ_y =[122X [3X
  permY [103X and degree [3Xd[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XOrigami((1,2), (2,3), 3);[127X[104X
    [4X[28XOrigami((1,2), (2,3), 3)[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XOrigamiWithoutTest[102X( [3XpermX[103X, [3Xpermy[103X, [3Xd[103X ) [32X function[133X
  
  [33X[0;0YThis  function  does  the same as [2XOrigami[102X, but in contrast it does not test,
  weather the origami describes a connected surface.[133X
  
  [33X[1;0Y[29X[2XActionOfSpecialLinearGroup[102X( [3Xmatrix[103X, [3Xorigami[103X ) [32X operation[133X
  
  [33X[0;0YThe group [22XSL_2(Z)[122X acts on the set of origamis of fixed degree. The follwoing
  methods for this operation are installed.[133X
  
  [33X[1;0Y[29X[2XActionOfSpecialLinearGroup[102X( [3Xword[103X, [3Xorigami[103X ) [32X method[133X
  
  [33X[0;0YGiven  a  word  [3Xword[103X  in  the free group [22XGroup(tildeS, tildeT)[122X this function
  computes [22XÏ€([3Xword[103X) âˆˆ SL_2(Z)[122X and returns [22XÏ€([3Xword[103X).[3Xorigami[103X[122X. The word is given as
  a string, as shown in the following example.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XActionOfSpecialLinearGroup("ST",Origami((1,3,5), (1,3)(2,4,5), 5));[127X[104X
    [4X[28XOrigami((1,3)(2,5,4), (2,4,5,3), 5)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XActionOfSpecialLinearGroup[102X( [3Xmatrix[103X, [3Xorigami[103X ) [32X method[133X
  
  [33X[0;0YGiven  matrix  in  [22XSL_2(Z)[122X this function returns [3Xmatrix[103X.[3Xorigami[103X. The word is
  given as a string, as shown in the following example.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XActionOfSpecialLinearGroup([ [ 0, -1 ], [ 1, 1 ] ], Origami((1,3,5), [127X[104X
    [4X[28X>(1,3)(2,4,5), 5)); [128X[104X
    [4X[28XOrigami((1,3)(2,5,4), (2,4,5,3), 5)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XActionOfF2ViaCanonical[102X( [3Xorigami[103X, [3Xword[103X ) [32X function[133X
  
  [33X[0;0YGiven  a  word  [3Xword[103X  in  the free group [22XGroup(tildeS, tildeT)[122X this function
  computes  [22XÏ€([3Xword[103X)  âˆˆ SL_2(Z)[122X and returns [22XÏ€([3Xword[103X).[3Xorigami[103X[122X. But in contrast to
  [2XActionOfSpecialLinearGroup[102X   the   result   is   stored   in  the  canonical
  representation.  ATTENTION:  the  order of arguments is switched compared to
  the order of the arguments in the function [2XActionOfSpecialLinearGroup[102X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XActionOfF2ViaCanonical(Origami((1,2), (1,3), 3), "S");[127X[104X
    [4X[28XOrigami((1,2), (2,3), 3)[128X[104X
    [4X[28X  [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XRightActionOfF2ViaCanonical[102X( [3Xorigami[103X, [3Xword[103X ) [32X function[133X
  
  [33X[0;0YThis  function computes the right action of the projection of a word [3Xword[103X in
  the  free  group  [22XGroup(tildeS,  tildeT)[122X  on  an origami [3Xorigami[103X. It returns
  [22X[3Xorigami[103X.Ï€([3Xword[103X)  =  Ï€([3Xword[103X)^-1.[3Xorigami[103X[122X,  where the left action is the common
  action  of  [22XSL_2(Z)[122X  on origamis of a given degree. This action has the same
  orbits  as  the left action. For the Veechgroup computation both actions can
  be  used and give the same result. In contrast to [2XActionOfSpecialLinearGroup[102X
  the  result  is stored in the canonical representation. ATTENTION: the order
  of  arguments  is  switched  compared  to  the order of the arguments in the
  function [2XActionOfSpecialLinearGroup[102X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XRightActionOfF2ViaCanonical(Origami((2,3), (1,3,2), 3),"T");[127X[104X
    [4X[28XOrigami((1,2), (2,3), 3)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XCanonicalOrigamiViaDelecroixAndStart[102X( [3Xorigami[103X, [3Xstart[103X ) [32X function[133X
  
  [33X[0;0YThis  function calculates a canonical representation of an origami depending
  on  a  given  number  start (Between 1 and the degree of of the origami). To
  determine  a  canonical  numbering  the  algorithm starts at the square with
  number start. This sqare is labeled as 1 in the new numbering. The algorithm
  walks  along the origami in the following way and numbers the squares in the
  order,  they  are  visited.  First it walks in horizontal direction until it
  reaches  the  square  with number start again. Then it walks one step up (in
  vertical direction) and then again a loop in horizontal direction. This will
  be  repeated  until  the  vertical loop is complete or all squares have been
  visited.  If  there  are  unvisited  squares,  we continue with the smallest
  number  (in  the  new  numbering),  that has not been in a vertical loop. An
  origami  is  connected,  so  that  number  exists.  This function is used to
  determine  a  canonical  origami independent of the starting point. The idea
  for the algorithm derives from the algorithm to_standard_form implemented in
  the SageMath package surface_dynamics. (REFERENZ HINZUFÃœGEN!)[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XCanonicalOrigamiAndStart(Origami((1,10,7,6,8,9,2)(4,5),[127X[104X
    [4X[25X>[125X [27X(1,8,5,4)(2,10,6)(3,9,7), 10), 1);[127X[104X
    [4X[28XOrigami((1,2,3,4,5,6,7)(8,9), (1,5,8,9)(2,4,7)(3,10,6), 10)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XCanonicalOrigamiViaDelecroix[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  computes  a  canonical  representation  of  an  origami.  It
  calculates the representation from CanonicalOrigamiViaDelecroixAndStart with
  all  squares as start squares, independent of the given representation. Then
  it  takes the minimum with respect to the order which [5XGAP[105X automatically uses
  to compare paires of permutations. Two origamis are equal (up to renumbering
  of  the  squares)  if  they  are described by the same permutations in their
  canonical representation.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XCanonicalOrigami(Origami((1,10,7,6,8,9,2)(4,5), (1,8,5,4)(2,10,6)(3,9,7), 10));[127X[104X
    [4X[28XOrigami((2,3,4,5,6,7,8)(9,10), (1,2,6)(3,5,7)(4,8,9,10), 10)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XOrigamiFamily[102X[32X family[133X
  
  [33X[0;0YSince  origamis do not fit in any existing family in [5XGAP[105X, we introduce a new
  family for origami objects called OrigamiFamily.[133X
  
  [33X[1;0Y[29X[2XHorizontalPerm[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis function returns the horizontal permutation [22XÏƒ_y[122X of an origami [3Xorigami[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XHorizontalPerm(Origami((1,3,5), (1,3)(2,4,5), 5));[127X[104X
    [4X[28X(1,3,5)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XVerticalPerm[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis function returns the vertical permutation [22XÏƒ_x[122X of an origami [3Xorigami[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XVerticalPerm( Origami((1,3,5), (1,3)(2,4,5), 5));[127X[104X
    [4X[28X(1,3)(2,4,5)[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XDegreeOrigami[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis function returns the degree of an [3Xorigami[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XDegreeOrigami(Origami((1,3,5), (1,3)(2,4,5), 5));[127X[104X
    [4X[28X5[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XStratum[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis  function  calculates the stratum of an origami [3Xorigami[103X. The stratum of
  an  origami  is  a  list  of the nonzero degrees of the singularities. For a
  singularity with cone angle [22X2Ï€ k[122X the degree of the singularity is [22Xk-1[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XStratum(Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8));[127X[104X
    [4X[28X[ 1, 5 ][128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XGenus[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis function calculates the genus of the origami surface.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XGenus( Origami((1,2,3,4),(1,2)(3,4), 4) );[127X[104X
    [4X[28X2[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XVeechGroup[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis   function  calculates  the  Veechgroup  of  an  origami  [3Xorigami[103X.  The
  Veechgroup  [22XG[122X of [3Xorigami[103X is a subgroup [22XSL_2(Z)[122X of finite index. The group is
  stored  as  a  ModularSubgroup  from  the  [5XModularSubgroup[105X  package.  It  is
  represented  by two permutations [22XÏƒ_S[122X and [22XÏƒ_T[122X describing how the generators [22XS[122X
  and  [22XT[122X  of [22XSL_2(Z)[122X act on the cosets of [22XG[122X in [22XSL_2(Z)[122X. E.g, if [22XSH_i = H_j[122X and
  [22XH_i,H_j[122X  are  the  cosets associated to the integers [22Xi,j[122X, respectively, then
  [22XÏƒ_S(i)=j[122X.  The  algorithm  was  introduced by Gabriela Weitze-SchmithÃ¼sen in
  [WS04].  You get the coset permutations using the [5XModularSubgroup[105X package as
  in the following example.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XSAction(VeechGroup(Origami((1,2,5)(3,4,6), (1,2)(5,6), 6)));[127X[104X
    [4X[28X(1,3)(2,5)(4,7)(6,8)(9,10)[128X[104X
    [4X[25Xgap>[125X [27XTAction(VeechGroup(Origami((1,2,5)(3,4,6), (1,2)(5,6), 6)));[127X[104X
    [4X[28X(1,2,4)(3,6)(5,8,7,9,10)[128X[104X
    [4X[28X        [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XCosets[102X( [3Xorigami[103X ) [32X attribute[133X
  
  [33X[0;0YThis  function  calculates  the right cosets of the Veechgroup of an origami
  [3Xorigami[103X as a list of words in [22XS[122X and [22XT[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XCosets(Origami((1,2,5)(3,4,6), (1,2)(5,6), 6));[127X[104X
    [4X[28X[ <identity ...>, S, T, T^-1, S*T, S*T^-1, T*S, T^-1*S, S*T*S, S*T^-1*S ][128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XEquivalentOrigami[102X( [3Xorigami1[103X, [3Xorigami2[103X ) [32X function[133X
  
  [33X[0;0YThis  function tests whether [3Xorigami1[103X is equal to [3Xorigami2[103X up to renumbering
  of the squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XEquivalentOrigami(Origami((1,4)(2,6,3), (1,5)(2,3,6,4), 6), Origami((1,4,3)[127X[104X
    [4X[28X>(2,5), (1,5,3,4)(2,6), 6));[128X[104X
    [4X[28Xtrue[128X[104X
    [4X[28X[128X[104X
    [4X[25Xgap>[125X [27XEquivalentOrigami(Origami((1,4)(2,6,3), (1,5)(2,3,6,4), 6), Origami((1,2,5)[127X[104X
    [4X[28X>(3,4,6), (1,2)(5,6), 6));[128X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  
  [1X1.4 [33X[0;0YList of Origamis[133X[101X
  
  [33X[0;0YThe following functions generarte lists of Origamis.[133X
  
  [1X1.4-1 OrigamiList[101X
  
  [33X[1;0Y[29X[2XOrigamiList[102X( [3Xd[103X ) [32X function[133X
  
  [33X[0;0YThis Function calculates a list of all origamis, with a given degree [3Xd[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XOrigamiList(2);[127X[104X
    [4X[28X[ Origami((), (1,2), 2), Origami((1,2), (), 2), Origami((1,2), (1,2), 2) ][128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XOrigamiListWithStratum[102X( [3Xd[103X, [3Xstratum[103X ) [32X function[133X
  
  [33X[0;0YThis  function  calculates  a list of all origamis with a given degree [3Xd[103X and
  stratum [3Xstratum[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XOrigamiListWithStratum(5, [1,1]);[127X[104X
    [4X[28X[ Origami((1,2), (1,3)(2,4,5), 5), Origami((1,2), (1,3,2,4,5), 5), [128X[104X
    [4X[28X  Origami((1,2,3), (1,2)(3,4,5), 5), Origami((1,2,3), (2,3,4,5), 5), [128X[104X
    [4X[28X  Origami((1,2,3), (2,4,5,3), 5), Origami((1,2)(3,4,5), (2,3), 5), [128X[104X
    [4X[28X  Origami((1,2)(3,4,5), (1,2,3), 5), Origami((1,2)(3,4,5), (2,3,4,5), 5), [128X[104X
    [4X[28X  Origami((1,2)(3,4,5), (2,3,5,4), 5), Origami((1,2)(3,4,5), (1,2,3,4,5), 5), [128X[104X
    [4X[28X  Origami((1,2)(3,4,5), (1,2,3,5,4), 5), Origami((1,2,3,4), (3,4,5), 5), [128X[104X
    [4X[28X  Origami((1,2,3,4), (3,5,4), 5), Origami((1,2,3,4), (1,2,3)(4,5), 5), [128X[104X
    [4X[28X  Origami((1,2,3,4), (1,3,2)(4,5), 5), Origami((1,2,3,4), (2,3,4,5), 5), [128X[104X
    [4X[28X  Origami((1,2,3,4), (2,5,4,3), 5), Origami((1,2,3,4), (1,2,4,5,3), 5), [128X[104X
    [4X[28X  Origami((1,2,3,4), (1,3,5,4,2), 5), Origami((1,2,3,4,5), (3,5), 5), [128X[104X
    [4X[28X  Origami((1,2,3,4,5), (1,2)(3,4,5), 5), Origami((1,2,3,4,5), (1,2)(3,5,4), 5)[128X[104X
    [4X[28X    , Origami((1,2,3,4,5), (2,4,3,5), 5), Origami((1,2,3,4,5), (2,5,3,4), 5) ][128X[104X
  [4X[32X[104X
  
  
  [1X1.5 [33X[0;0YUsing SageMath functions[133X[101X
  
  [33X[0;0YThe  SageMath  Package  surface_dynamics  from  Vincent  Delecroix  provides
  methods  for  origamis.  To  use the functions of this chapter, Sage must be
  installed on your operation system.[133X
  
  [1X1.5-1 VeechgroupBySage[101X
  
  [33X[1;0Y[29X[2XVeechgroupBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis function executes the SageMath method Veechgroup to [3Xorigami[103X and returns
  its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XNormalFormBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis function executes the SageMath method NormalForm to [3Xorigami[103X and returns
  its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XIsHyperellipticBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes  the SageMath method IsHyperelliptic to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XIsPrimitiveBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes  the  SageMath  method  IsPrimitive  to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XReduceBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis function executes the SageMath method Reduce to [3Xorigami[103X and returns its
  result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XAbsolutePeriodGeneratorsBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes  the  SageMath  method  AbsolutePeriodGenerators to
  [3Xorigami[103X and returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XLatticeOfAbsolutePeriodsBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes  the  SageMath  method  LatticeOfAbsolutePeriods to
  [3Xorigami[103X and returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XLatticeOfQuotientsBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis function executes the SageMath method LatticeOfQuotients to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XOptimalDegreeBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes  the  SageMath  method OptimalDegree to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XPeriodGeneratorsBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes the SageMath method PeriodGenerators to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XWidthsAndHeightsBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes the SageMath method WidthsAndHeights to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XSumOfLyapunovExponentsBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis function executes the SageMath method SumOfLyapunovExponents to [3Xorigami[103X
  and returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XLyapunovExponentsApproxBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes  the  SageMath  method  LyapunovExponentsApprox  to
  [3Xorigami[103X and returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XIntermediateCoversBySage[102X( [3Xorigami[103X ) [32X function[133X
  
  [33X[0;0YThis  function  executes the SageMath method NormalFormBySage to [3Xorigami[103X and
  returns its result as [5XGAP[105X object.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X[128X[104X
  [4X[32X[104X
  
