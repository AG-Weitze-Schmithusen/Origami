gap> TestComb := function(n, x, y) local o; o := CombOrigami(n,x,y); if o <> fail then Print(n, " ", x, " ", y, " :", Genus(o), Stratum(o), "\n"); else Print("failed\n"); fi; end;
function( n, x, y ) ... end
gap> for x in [0..4] do for y in [0..4] do TestComb(5,x,y); od; od;
failed
5 0 1 :3[ 1, 1, 1, 1 ]
5 0 2 :3[ 1, 1, 1, 1 ]
5 0 3 :3[ 1, 1, 1, 1 ]
5 0 4 :3[ 1, 1, 1, 1 ]
5 1 0 :3[ 1, 1, 1, 1 ]
5 1 1 :3[ 1, 1, 1, 1 ]
5 1 2 :3[ 1, 1, 1, 1 ]
5 1 3 :3[ 1, 1, 1, 1 ]
5 1 4 :3[ 1, 1, 1, 1 ]
5 2 0 :3[ 1, 1, 1, 1 ]
5 2 1 :3[ 1, 1, 1, 1 ]
5 2 2 :3[ 1, 1, 1, 1 ]
5 2 3 :3[ 1, 1, 1, 1 ]
5 2 4 :3[ 1, 1, 1, 1 ]
5 3 0 :3[ 1, 1, 1, 1 ]
5 3 1 :3[ 1, 1, 1, 1 ]
5 3 2 :3[ 1, 1, 1, 1 ]
5 3 3 :3[ 1, 1, 1, 1 ]
5 3 4 :3[ 1, 1, 1, 1 ]
5 4 0 :3[ 1, 1, 1, 1 ]
5 4 1 :3[ 1, 1, 1, 1 ]
5 4 2 :3[ 1, 1, 1, 1 ]
5 4 3 :3[ 1, 1, 1, 1 ]
5 4 4 :3[ 1, 1, 1, 1 ]
gap> for x in [0..3] do for y in [0..3] do TestComb(4,x,y); od; od;
failed
4 0 1 :3[ 1, 1, 1, 1 ]
failed
4 0 3 :3[ 1, 1, 1, 1 ]
4 1 0 :3[ 1, 1, 1, 1 ]
4 1 1 :3[ 1, 1, 1, 1 ]
4 1 2 :3[ 1, 1, 1, 1 ]
4 1 3 :3[ 1, 1, 1, 1 ]
failed
4 2 1 :3[ 1, 1, 1, 1 ]
failed
4 2 3 :3[ 1, 1, 1, 1 ]
4 3 0 :3[ 1, 1, 1, 1 ]
4 3 1 :3[ 1, 1, 1, 1 ]
4 3 2 :3[ 1, 1, 1, 1 ]
4 3 3 :3[ 1, 1, 1, 1 ]
