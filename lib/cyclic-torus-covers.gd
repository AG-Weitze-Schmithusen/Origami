#! @Chapter Cyclic Torus Covers
#! @ChapterLabel cyclic-torus-covers
#! Let $T_n$ be the $n \times n$-Torus. A **cyclic $n$-torus cover of degree $d$** is a normal covering $X \to T_n$ whose Deck-group is cyclic with $d$ elements.
#! We can obtain an origami from each cyclic $n$-torus cover by appending the map $p_n: T_n \to T_1$, which sends each square to the singular square of the
#! trivial torus. We call such origamis **cyclic torus cover origamis**. There are several functions that help working with these.
#! 
#! @Section Bases of the fundamental group
#! There are two bases of the fundamental group of $T_n$ which we will use. The base point is chosen as the midpoint of the lower
#! left square. The basis $L$ consists of the full horizontal path to the right, the full vertical path upwards and
#! loops around each of the $n^2 - 1$ corner points of the squares (numbered left to right and bottom up; the loop on the most upper right corner excluded)
#! in this order.
#! 
#! The base $S$ consists of picking a maximal set of slits between squares such that $T_n$ without these is still simply connected. The crossing of one such
#! slit bottom up (for horizontal slits) and left to right (for vertical slits) is then an element of the basis.
#! 
#! Convertion between these two bases is performed with <Ref Func="BaseChangeLToS" />

#! @Section General Cyclic Torus Cover functions

#! @Arguments n d hslits vslits
#! @Returns a cyclic torus cover origami
#! @Description
#!  A cyclic torus cover consists of $d$ copies of the trivial origami $T_n$. Each of the $n^2$ fields of $T_n$
#!  gets assigned a label from $1$ to $n^2$ row-wise from left to right and bottom up. Let $f$ be a field with the label
#!  $k$ in the $i$-th copy of the cyclic torus cover. Then $f$'s right neighbour's label is determined by determining the
#!  usual right neighbour in $T_n$ and its copy is $((i+\texttt{vslits[k]}) \bmod d)$. The same goes for the upper neighbour and
#!  $\texttt{hslits}$.
DeclareGlobalFunction("GeneralizedCyclicTorusCover");

#! @Arguments n x y
#! @Returns a comb origami, which is a cyclic torus cover of degree 2 specified by a single point $P=(x,y)$
#! @Description A comb origami is a special cyclic torus cover of degree 2, specified by a single point $P$
#!  on $T_n$. The coordinates are given in the range ${0,..,n-1}^2$, where the
#!  point $(0,0)$ is located in the lower left corner. $P$ must not be a 2-torsion point, that is, it must not be
#!  $(0,0)$, $(n/2, n/2)$, $(n/2,0)$ or $(0,n/2)$. The coordinates are considered modulo $n$.
DeclareGlobalFunction("CombOrigami");

#! @Arguments n p H
#! @Returns a monodromy vector in $(\mathbb{Z}/p\mathbb{Z})^{n^2+1}$ representing an origami with respect to $L$
#!  that has $H$ as a veech group or $\texttt{false}$ if no such vector is found.
#! @Description $p$ must be prime. $H$ must be a congruence subgroup of level $p$ and $n$ must be $\geq 2$.
DeclareGlobalFunction("SearchForCyclicTorusOrigamiWithVeechGroup", [IsPosInt, IsPosInt, IsMatrixGroup]);

#! @Arguments n d v
#! @Returns an origami whose monodromy vector representation with respect to $S$ is $v$.
#! @Description $n$ must be $\geq 2$, $d\geq 1$ and $v \in (\mathbb{Z}/d\mathbb{Z})^{n^2+1}$ a vector such that its elements generate $\mathbb{Z}/d\mathbb{Z}$.
DeclareGlobalFunction("CyclicTorusCoverOrigami", [IsPosInt, IsPosInt, IsRowVector]);

#! @Section Matrices acting on the homology of the n-Torus

#! @Arguments n
#! @Returns a matrix $M = D_{SL}$ representing a change of base between the bases $L$ and $S$.
#! @Description Returns a matrix corresponding to the change of base from $L$ to $S$ on the homology of $T_n$. The matrix has the following property: given any cyclic torus cover origami as a monodromy vector $v$ with respect to the base $S$, you may obtain the corresponding monodromy vector with respect to base $L$ using $v \cdot D_{SL}$.
DeclareGlobalFunction("BaseChangeLToS", [IsPosInt]);

#! @Arguments n
#! @Returns the group of translations (as matrices) acting on monodromy vectors with respect to $L$.
#! @Description The group that is generated by the matrices representing the translation by one square to the right
#!  and the translation by one square up with respect to basis $L$.
DeclareGlobalFunction("TranslationGroupOnHomologyOfTn", [IsPosInt]);

#! @Arguments n
#! @Returns a matrix representing the action of the generator $T$ of $\mathrm{Sl}_2(\mathbb{Z})$ on the homology of $T_n$ with respect to $L$.
DeclareGlobalFunction("ActionOfTOnHomologyOfTn", [IsPosInt]);

#! @Arguments n
#! @Returns a matrix representing the action of the generator $S$ of $\mathrm{Sl}_2(\mathbb{Z})$ on the homology of $T_n$ with respect to $L$.
DeclareGlobalFunction("ActionOfSOnHomologyOfTn", [IsPosInt]);

#! @Arguments n A
#! @Returns a matrix representing the action of $A \in \mathrm{Sl}_2(\mathbb{Z})$ on the homology of $T_n$ with respect to $L$.
#! @Description A must be in $\mathrm{Sl}_2(\mathbb{Z})$. It is written as a word in the generators $S$ and $T$ of $\mathrm{Sl}_2(\mathbb{Z})$, then the corresponding
#!  word with the matrices calculated by <Ref Func="ActionOfTOnHomologyOfTn" /> and <Ref Func="ActionOfSOnHomologyOfTn" /> is taken and returned.
DeclareGlobalFunction("ActionOfMatrixOnHomologyOfTn", [IsPosInt, IsMatrix]);
