  
  [1X2 [33X[0;0YThe functionality of this package[133X[101X
  
  
  [1X2.1 [33X[0;0YBasic construction of origamis[133X[101X
  
  [1X2.1-1 Origami[101X
  
  [33X[1;0Y[29X[2XOrigami[102X( [3Xsigma_x[103X, [3Xsigma_y[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YThis  function  constructs an [10XOrigami[110X object from two given permutations [22XÏƒ_x[122X
  and  [22XÏƒ_y[122X.  A test is performed to check whether the surface described by the
  given permutations is connected, i.e. whether the group generated by the two
  permutations acts transitively.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := Origami((1,2,3,4,5),(5,6));[128X[104X
    [4X[28X    Origami((1,2,3,4,5), (5,6), 6)[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XOrigamiNC[102X( [3Xsigma_x[103X, [3Xsigma_y[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YThis  function  constructs an [10XOrigami[110X object from two given permutations [22XÏƒ_x[122X
  and [22XÏƒ_y[122X without checking whether or not the described surface is connected.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := OrigamiNC((1,2,3,4,5),(5,6));[128X[104X
    [4X[28X    Origami((1,2,3,4,5), (5,6), 6)[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XHorizontalPerm[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA permutation.[133X
  
  [33X[0;0YReturns  the  permutation  [22XÏƒ_x[122X  describing the horizontal gluing of the unit
  squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O := Origami((1,2,3,4,5),(5,6));[128X[104X
    [4X[28X      Origami((1,2,3,4,5), (5,6), 6)[128X[104X
    [4X[28X      gap> HorizontalPerm(O);[128X[104X
    [4X[28X      (1,2,3,4,5)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XVerticalPerm[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA permutation.[133X
  
  [33X[0;0YReturns  the  permutation  [22XÏƒ_y[122X  describing  the  vertical gluing of the unit
  squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O := Origami((1,2,3,4,5),(5,6));[128X[104X
    [4X[28X      Origami((1,2,3,4,5), (5,6), 6)[128X[104X
    [4X[28X      gap> VerticalPerm(O);[128X[104X
    [4X[28X      (5,6)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XDegreeOrigami[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA positive integer.[133X
  
  [33X[0;0YReturns  the  degree of the origami [3XO[103X, i.e. the number of unit squares which
  are  glued together. In terms of permutations, the degree corresponds to the
  largest moved point of [22XÏƒ_x[122X and [22XÏƒ_y[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O := Origami((1,2,3,4,5),(5,6));[128X[104X
    [4X[28X      Origami((1,2,3,4,5), (5,6), 6)[128X[104X
    [4X[28X      gap> DegreeOrigami(O);[128X[104X
    [4X[28X      6[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  
  [1X2.2 [33X[0;0YThe [22XSL_2( Z)[122X[101X[1X-action[133X[101X
  
  [33X[0;0YThe  group  [22XSL_2(  Z)[122X  acts  on  the  set  of all origamis via the following
  formulas:[133X
  
  
  [24X[33X[0;6YS.O(\sigma_x,  \sigma_y)  = O(\sigma_y^{-1}, \sigma_x), \qquad T.O(\sigma_x,
  \sigma_y) = O(\sigma_x, \sigma_y \sigma_x^{-1})[133X
  
  [124X
  
  [33X[0;0Ywhere [22XS[122X and [22XT[122X denote the standard generators[133X
  
                       [ 0 -1 ]            [ 1  1 ]
                   S = [ 1  0 ],       T = [ 0  1 ]
    
  
  [33X[0;0Yof [22XSL_2( Z)[122X. The succeeding methods implement this action in GAP.[133X
  
  [1X2.2-1 ActionOfS[101X
  
  [33X[1;0Y[29X[2XActionOfS[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YFor  a  given  origami  [3XO[103X this methods computes the origami [22XS.O[122X as described
  above.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:= Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8)[128X[104X
    [4X[28X      gap> ActionOfS(O);[128X[104X
    [4X[28X      Origami((1,6,2,8,3,5,4), (1,6,4,7,5,3)(2,8), 8)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XActionOfT[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YFor  a  given  origami  [3XO[103X this methods computes the origami [22XT.O[122X as described
  above.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:= Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8)[128X[104X
    [4X[28X      gap> ActionOfT(O);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,6,3,2)(4,7), 8)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XActionOfSInv[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YFor a given origami [3XO[103X this methods computes the origami [22XS^-1.O[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:= Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8)[128X[104X
    [4X[28X      gap> ActionOfSInv(O);[128X[104X
    [4X[28X      Origami((1,4,5,3,8,2,6), (1,3,5,7,4,6)(2,8), 8)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XActionOfTInv[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YFor a given origami [3XO[103X this methods computes the origami [22XT^-1.O[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:= Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8)[128X[104X
    [4X[28X      gap> ActionOfTInv(O);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,7,5)(2,4,3), 8)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XActionOfSL2[102X( [3Xw[103X, [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YFor  a  given  origami  [3XO[103X  and a word [3Xw[103X in [22XS[122X and [22XT[122X (given as a string), this
  methods computes the origami [22Xw^-1.O[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:= Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8);[128X[104X
    [4X[28X      Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6), 8)[128X[104X
    [4X[28X      gap> ActionOfSL2("S*T", O);[128X[104X
    [4X[28X      Origami((1,6,2,8,3,5,4), (3,4,7)(5,8,6), 8)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  
  [1X2.3 [33X[0;0YEquivalence of origamis and normal forms[133X[101X
  
  [33X[0;0YWe  consider  two origamis to be equivalent (or isomorphic), if they are the
  same  up to relabelling the squares. In terms of pairs of permutations, this
  corresponds  to  simultaneous  conjugation.  Equivalence  can  be checked by
  computing a certain normal form for origamis.[133X
  
  [1X2.3-1 OrigamiNormalForm[101X
  
  [33X[1;0Y[29X[2XOrigamiNormalForm[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YComputes a normal form of a given origami. This normal form has the property
  that two origamis are equivalent if and only if their normal form are equal.
  Note  that this method does not copy any previously computed attributes from
  the old origami to the new one.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O := Origami((1,3,2,4),(2,3));[128X[104X
    [4X[28X      Origami((1,3,2,4), (2,3), 4)[128X[104X
    [4X[28X      gap> OrigamiNormalForm(O);[128X[104X
    [4X[28X      Origami((1,2,3,4), (3,4), 4)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XCopyOrigamiInNormalForm[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YThis  method  does  the  same  as [10XOrigamiNormalForm[110X but [13Xdoes copy[113X previously
  computed attributes.[133X
  
  [33X[1;0Y[29X[2XOrigamisEquivalent[102X( [3XO1[103X, [3XO2[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YTwo origamis.[133X
  
  [33X[0;0YChecks  whether  two given origamis are equivalent by comparing their normal
  forms.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> P := Origami((1,2,3,4), (3,4), 4);[128X[104X
    [4X[28X      Origami((1,2,3,4), (3,4), 4)[128X[104X
    [4X[28X      gap> O := Origami((1,3,2,4),(2,3));[128X[104X
    [4X[28X      Origami((1,3,2,4), (2,3), 4)[128X[104X
    [4X[28X      gap> OrigamisEquivalent(O, P);[128X[104X
    [4X[28X      true[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  
  [1X2.4 [33X[0;0YComputing attributes of origamis[133X[101X
  
  [1X2.4-1 Stratum[101X
  
  [33X[1;0Y[29X[2XStratum[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA (possibly empty) list of positive integers.[133X
  
  [33X[0;0YThis  function  calculates  the  stratum of an origami, i.e. the list of the
  nonzero  degrees of the singularities. For a singularity of cone angle [22X2 k Ï€[122X
  the degree of the singularity is [22Xk-1[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> Stratum(Origami((1,6,4,7,5,3)(2,8), (1,4,5,3,8,2,6)));[128X[104X
    [4X[28X      [ 1, 5 ][128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XGenus[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA non-negative integer.[133X
  
  [33X[0;0YCalculates the genus of an origami.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> Genus(Origami((1,2,3,4), (1,2)(3,4)));[128X[104X
    [4X[28X    2[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XIndexOfMonodromyGroup[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA positive integer.[133X
  
  [33X[0;0YCalculates the index of the monodromy group of an origami, i.e. the index of
  the  subgroup  generated  by [22XÏƒ_x[122X and [22XÏƒ_y[122X in [22XS_d[122X where [22Xd[122X is the degree of the
  origami.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> IndexOfMonodromyGroup(Origami((1,3,6)(4,5),(2,4,3,5)(7,1)));[128X[104X
    [4X[28X    1[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XVeechGroup[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA subgroup of [22XSL_2( Z)[122X.[133X
  
  [33X[0;0YThe  Veech group of an origami is a finite-index subgroup of [22XSL_2(Z)[122X. In GAP
  it  is is represented as a [10XModularSubgroup[110X from the [5XModularGroup[105X package. It
  is  determined by two permutations [22XÏƒ_S[122X and [22XÏƒ_T[122X describing how the generators
  [22XS[122X and [22XT[122X of [22XSL_2(Z)[122X act on the cosets. See [Sch04] for a detailed description
  of the algorithm used to compute the Veech group.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := Origami((1,2,5)(3,4,6), (1,2)(5,6));[128X[104X
    [4X[28X    Origami((1,2,5)(3,4,6), (1,2)(5,6), 6)[128X[104X
    [4X[28X    gap> G := VeechGroup(O);[128X[104X
    [4X[28X    <modular subgroup of index 10>[128X[104X
    [4X[28X    gap> Display(G);[128X[104X
    [4X[28X    ModularSubgroup([128X[104X
    [4X[28X    S : ( 1, 2)( 3, 6)( 4, 7)( 5, 8)( 9,10)[128X[104X
    [4X[28X    T : ( 1, 3)( 2, 4, 5)( 6, 8,10, 9, 7)[128X[104X
    [4X[28X    R : ( 1, 8, 7)( 2, 6)( 3, 4,10, 9, 5)[128X[104X
    [4X[28X    J : ( 1, 5, 6)( 2, 3, 7)( 4, 9, 8) )[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XVeechGroupAndOrbit[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA record.[133X
  
  [33X[0;0YComputes  both  the Veech group and the orbit under the [22XSL_2( Z)[122X action of a
  given  origami  [3XO[103X.  Also  returns the matrices with map the origami [3XO[103X to the
  corresponding orbit elements. The returned record has the following format:[133X
  
  [30X    [33X[0;6Y[13XVeechGroup[113X : the Veech group as a [10XModularSubgroup[110X[133X
  
  [30X    [33X[0;6Y[13Xorbit[113X : the [22XSL_2( Z)[122X-orbit of [3XO[103X as a list of [10XOrigami[110Xs[133X
  
  [30X    [33X[0;6Y[13Xmatrices[113X  :  a  list  of matrices mapping [3XO[103X to the corresponding orbit
        elements[133X
  
  [33X[1;0Y[29X[2XDeckGroup[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA group.[133X
  
  [33X[0;0YComputes the group of deck transformations of the origami [3XO[103X as a covering of
  the  once punctured torus. Note that the deck transformations can be seen as
  permutations of the squares of the origami.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := Origami((1,2,3,4,5), (), 5);[128X[104X
    [4X[28X    Origami((1,2,3,4,5), (), 5)[128X[104X
    [4X[28X    gap> DeckGroup(O);[128X[104X
    [4X[28X    Group([ (), (1,2,3,4,5), (1,3,5,2,4), (1,4,2,5,3), (1,5,4,3,2) ])[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XIsElementOfDeckGroup[102X( [3Xp[103X, [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA boolean.[133X
  
  [33X[0;0YChecks whether or not the permutation [3Xp[103X defines a deck transformation of the
  origami [3XO[103X.[133X
  
  [33X[1;0Y[29X[2XIsNormalOrigami[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA boolean.[133X
  
  [33X[0;0YChecks whether or not a given origami is normal. An origami is called normal
  if its deck group acts transitively on the fibres of the covering.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := Origami((1,2,3,4,5), (), 5);[128X[104X
    [4X[28X    Origami((1,2,3,4,5), (), 5)[128X[104X
    [4X[28X    gap> IsNormalOrigami(O);[128X[104X
    [4X[28X    true[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XSymplecticBasisOfHomology[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of words.[133X
  
  [33X[0;0YComputes a basis of the homology [22XH_1(O;Z)[122X that is symplectic with respect to
  the  intersection form. The basis elements are represented as words in [22Xx[122X and
  [22Xy[122X which define closed paths starting from the square [22X1[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := Origami((1,2),(2,3));[128X[104X
    [4X[28X    Origami((1,2), (2,3), 3)[128X[104X
    [4X[28X    gap> SymplecticBasisOfHomology(O);[128X[104X
    [4X[28X    [ x*y^2*x^-1, x*y^-2*x^-2*y^2*x^-1, x*y^-2*x^-1*y^-1*x*y^4*x^-1, x*y^-3*x^-1*y*x^-1 ][128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XSpinStructure[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Y[22X0[122X or [22X1[122X[133X
  
  [33X[0;0YComputes the parity of the spin structure of [22XO[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> O := Origami((1,2,3,4,5), (), 5);[128X[104X
    [4X[28X    Origami((1,2,3,4,5), (), 5)[128X[104X
    [4X[28X    gap> SpinStructure(O);[128X[104X
    [4X[28X    1[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XSumOfLyapunovExponents[102X( [3XO[103X ) [32X function[133X
  [6XReturns:[106X  [33X[0;10YA positive Integer.[133X
  
  [33X[0;0YThis  function  calculates the sum of the positive Lyapunov exponents of the
  Origami [3XO[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:=Origami((1,2,3,4,5,6,7,8,9),(1,3)(2,4,8)(5,7));[128X[104X
    [4X[28X      Origami((1,2,3,4,5,6,7,8,9), (1,3)(2,4,8)(5,7), 9)[128X[104X
    [4X[28X      gap> SumOfLyapunovExponents(O);[128X[104X
    [4X[28X      32/15[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  
  [1X2.5 [33X[0;0YNormal Origamis[133X[101X
  
  [33X[0;0YNormal origamis can equivalently be described by a finite group [22XG[122X and a pair
  [22Xx,  y[122X  of  generators  of [22XG[122X. The elements of [22XG[122X correspond to squares and the
  horizontal (resp. vertical) gluing is determined by left multiplication with
  [22Xx[122X (resp. [22Xy[122X), i.e. if [22Xg,h âˆˆ G[122X then [22Xg[122X is glued to [22Xh[122X in the [22Xx[122X-direction if [22Xxg =
  h[122X  and  analogously  for  the [22Xy[122X-direction. The group [22XG[122X is then evidently the
  deck group of the described origami. Furthermore, every normal origami is of
  this  form  where  [22XG[122X  is  its  deck  group.  Two  normal origamis [22X(x, y, G)[122X,
  [22X(x',y',G)[122X  given  in  such  a form are equivalent if and only if there is an
  automorphism [22XÏ† âˆˆ Aut(G)[122X of [22XG[122X such that [22XÏ†(x) = x'[122X and [22XÏ†(y) = y'[122X. We introduce
  a  new  GAP-category  called [10XIsNormalStoredOrigami[110X which is a subcategory of
  the  [10XOrigami[110X-category  for  representing  normal origamis which are given in
  terms of the above data. Since every [10XNormalStoredOrigami[110X is also an [10XOrigami[110X,
  every    method   implemented   for   [10XOrigami[110Xs   is   also   available   for
  [10XNormalStoredOrigami[110Xs.[133X
  
  [1X2.5-1 NormalStoredOrigami[101X
  
  [33X[1;0Y[29X[2XNormalStoredOrigami[102X( [3Xx[103X, [3Xy[103X, [3XG[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA normal origami.[133X
  
  [33X[0;0YFor  a given finite group [3XG[103X and two generators [3Xx, y[103X this method constructs a
  new   normal  origami  in  the  way  described  above.  It  is  given  as  a
  [10XNormalStoredOrigami[110X  object.  This  constructor  checks  whether or not [3XG[103X is
  actually generated by [3Xx[103X and [3Xy[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> G := AlternatingGroup(8);[128X[104X
    [4X[28X    Alt( [ 1 .. 8 ] )[128X[104X
    [4X[28X    gap> gen := MinimalGeneratingSet(G);[128X[104X
    [4X[28X    [ (1,2,3,4,5,6,7), (6,7,8) ][128X[104X
    [4X[28X    gap> x := gen[1];; y := gen[2];;[128X[104X
    [4X[28X    gap> O := NormalStoredOrigami(x, y, G);[128X[104X
    [4X[28X    Normal Origami( A_8.1^-1*A_8.2*A_8.1 , A_8.1^-1*A_8.2, Group( [ A_8.1, A_8.2 ]) )[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XNormalStoredOrigamiNC[102X( [3Xx[103X, [3Xy[103X, [3XG[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA normal origami.[133X
  
  [33X[0;0YDoes  the  same  as  the  [10XNormalStoredOrigami[110X constructor above but does not
  check whether or not [3XG[103X is generated by [3Xx[103X and [3Xy[103X.[133X
  
  [33X[1;0Y[29X[2XHorizontalElement[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA group element.[133X
  
  [33X[0;0YFor a [10XNormalStoredOrigami[110X, this method returns the [22Xx[122X-element which describes
  the gluing in the horizontal direction.[133X
  
  [33X[1;0Y[29X[2XVerticalElement[102X( [3XO[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10YA group element.[133X
  
  [33X[0;0YFor a [10XNormalStoredOrigami[110X, this method returns the [22Xy[122X-element which describes
  the gluing in the vertical direction.[133X
  
  [33X[1;0Y[29X[2XAsPermutationRepresentation[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YConverts  a  [10XNormalStoredOrigami[110X  into  an [10XOrigami[110X, i.e. computes the [22Xx[122X- and
  [22Xy[122X-permutations describing the gluing of the squares.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> G := AlternatingGroup(4);[128X[104X
    [4X[28X    Alt( [ 1 .. 4 ] )[128X[104X
    [4X[28X    gap> gen := MinimalGeneratingSet(G);[128X[104X
    [4X[28X    [ (2,4,3), (1,3)(2,4) ][128X[104X
    [4X[28X    gap> x := gen[1];; y := gen[2];;[128X[104X
    [4X[28X    gap> O := NormalStoredOrigami(x, y, G);[128X[104X
    [4X[28X    Normal Origami( f1 , f2, Group( [ f1, f2, f3 ] ) )[128X[104X
    [4X[28X    gap> AsPermutationRepresentation(O);[128X[104X
    [4X[28X    Origami((1,2,5)(3,6,9)(4,7,10)(8,11,12), (1,3)(2,7)(4,8)(5,12)(6,11)(9,10), 12)[128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XAsPermutationRepresentation[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YConverts a normal [10XOrigami[110X into a [10XNormalStoredOrigami[110X.[133X
  
  [33X[1;0Y[29X[2XAllNormalOrigamisFromGroup[102X( [3XG[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of normal origamis.[133X
  
  [33X[0;0YFor  a  given  group  [3XG[103X,  this  method  computes  all normal origamis (up to
  equivalence) which can be build from [3XG[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> G := AlternatingGroup(4);[128X[104X
    [4X[28X    Alt( [ 1 .. 4 ] )[128X[104X
    [4X[28X    gap> AllNormalOrigamisFromGroup(G);[128X[104X
    [4X[28X    [ Normal Origami( f3 , f1*f3, Group( [ f1, f2, f3 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f3, Group( [ f1, f2, f3 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f1*f3, Group( [ f1, f2, f3 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f1^2*f3, Group( [ f1, f2, f3 ] ) ) ][128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XAllNormalOrigamisByDegree[102X( [3Xd[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of normal origamis.[133X
  
  [33X[0;0YComputes all normal origamis (up to equivalence) with degree [3Xd[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> AllNormalOrigamisByDegree(5);[128X[104X
    [4X[28X    [ Normal Origami( <identity> of ... , f1, Group( [ f1 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , <identity> of ..., Group( [ f1 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f1, Group( [ f1 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f1^2, Group( [ f1 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f1^3, Group( [ f1 ] ) ),[128X[104X
    [4X[28X    Normal Origami( f1 , f1^4, Group( [ f1 ] ) ) ][128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  
  [1X2.6 [33X[0;0YConstructing examples of origamis[133X[101X
  
  [33X[0;0YIn  this section we describe some methods for constructing explicit examples
  and  families  of  origamis.  More examples of some special constructions of
  families of orgamis are given in Chapter [14X7[114X.[133X
  
  [1X2.6-1 AllOrigamisByDegree[101X
  
  [33X[1;0Y[29X[2XAllOrigamisByDegree[102X( [3Xd[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of origamis.[133X
  
  [33X[0;0YReturns a list of all origamis of degree [3Xd[103X up to equivalence.[133X
  
  [33X[1;0Y[29X[2XAllOrigamisInStratum[102X( [3Xd[103X, [3Xstratum[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of origamis.[133X
  
  [33X[0;0YReturns a list of all origamis of degree [3Xd[103X in the given stratum.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X    [128X[104X
    [4X[28X    gap> OrigamiListInStratum(4, [1,1]);[128X[104X
    [4X[28X    [ Origami((1,2), (1,3)(2,4), 4), Origami((1,2), (1,3,2,4), 4),[128X[104X
    [4X[28X      Origami((1,2)(3,4), (2,3), 4), Origami((1,2)(3,4), (2,3,4), 4),[128X[104X
    [4X[28X      Origami((1,2)(3,4), (1,2,3,4), 4), Origami((1,2,3), (2,3,4), 4),[128X[104X
    [4X[28X      Origami((1,2,3), (2,4,3), 4), Origami((1,2,3), (1,2)(3,4), 4),[128X[104X
    [4X[28X      Origami((1,2,3,4), (2,4), 4), Origami((1,2,3,4), (1,2)(3,4), 4) ][128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XQuasiRegularOrigami[102X( [3XG[103X, [3XH[103X, [3Xr[103X, [3Xu[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami.[133X
  
  [33X[0;0YThe function calculates an origami by a given group [3XG[103X and a subgroup of [3XG[103X [3XH[103X.
  [3XH[103X  must not contain any normal subgroups of G and [3Xr[103X and [3Xu[103X are the generators
  of  G. We identify the tiles of the origami with the right cosets of H in G.
  The  right  neighbour of the tile [22XHg[122X is the tile [22XHgr[122X and the upper neighbour
  of [22XHg[122X is [22XHgu[122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      G:=SymmetricGroup(3);[128X[104X
    [4X[28X      Sym( [ 1 .. 3 ] )[128X[104X
    [4X[28X      gap> H:=Group(());[128X[104X
    [4X[28X      Group(())[128X[104X
    [4X[28X      gap>QuasiRegularOrigami(G,H,(1,2),(2,3));[128X[104X
    [4X[28X      Origami((1,2)(3,5)(4,6), (1,3)(2,4)(5,6), 6)[128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XQROFromGroup[102X( [3XG[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of origamis.[133X
  
  [33X[0;0YReturns  a  list  of  all quasi-regular origamis which can be build from the
  group [3XG[103X.[133X
  
  [33X[1;0Y[29X[2XQROFromOrder[102X( [3Xd[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of origamis.[133X
  
  [33X[0;0YReturns a list of all quasi-regular origamis of order [3Xd[103X.[133X
  
  [33X[1;0Y[29X[2XNormalformConjugators[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of permutations.[133X
  
  [33X[0;0YCalculates all permutations which yield a normal form when conjugated to the
  [3XO[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X  gap>origami:=Origami((1,2,3,4), (1,2)(3,4));[128X[104X
    [4X[28X  Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X  gap>NormalformConjugators(origami);[128X[104X
    [4X[28X  [ (), (1,3,2), (1,3)(2,4), (1,2,4) ][128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XTranslationsOfOrigami[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of permutations.[133X
  
  [33X[0;0YComputes  all  translations of the origami as permutations of the squares of
  [3XO[103X. This is equivalent to the permutations [22Xt[122X which satisfy [22Xtâˆ˜ Ïƒ_xâˆ˜ t^-1 = Ïƒ_x[122X
  and  [22Xtâˆ˜Ïƒ_yâˆ˜  t^-1  = Ïƒ_y[122X, where [22XÏƒ_x, Ïƒ_y[122X are the permutations describing the
  horizontal and the vertical gluing of the origami, respectively.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      gap> origami:=Origami((1,2,3,4), (1,2)(3,4));[128X[104X
    [4X[28X    Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X    gap> TranslationsOfOrigami(origami);[128X[104X
    [4X[28X    [ (), (1,3)(2,4) ][128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XIsHyperelliptic[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA boolean.[133X
  
  [33X[0;0YTests whether an origami is hyperelliptic.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X  gap> origami:=Origami((1,2,3,4), (1,2)(3,4));[128X[104X
    [4X[28X  Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X  gap> IsHyperelliptic(origami);[128X[104X
    [4X[28X  true[128X[104X
    [4X[28X  gap> origami:=Origami((1,2,3,4,5,6), (1,2)(3,4)(5,6));[128X[104X
    [4X[28X  Origami((1,2,3,4,5,6), (1,2)(3,4)(5,6), 6)[128X[104X
    [4X[28X  gap> IsHyperelliptic(origami);[128X[104X
    [4X[28X  false[128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XPointReflectionsOfOrigami[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA list of permutations.[133X
  
  [33X[0;0YComputes  all  point  reflections  of [22XO[122X, i.e. all affine homeomorphisms with
  derivative  [22X-I[122X,  where  [22XI[122X  is the identity matrix. This is equivalent to the
  permutations  [22Xt[122X  which  satisfy  [22Xtâˆ˜Ïƒ_xâˆ˜ t^-1=Ïƒ_x^-1[122X and [22Xtâˆ˜ Ïƒ_yâˆ˜ t^-1=Ïƒ_y^-1[122X,
  where  [22XÏƒ_x,Ïƒ_y[122X  are  the  permutations  describing  the  horizontal  and the
  vertical gluing of the origami, respectively.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> o:=Origami((1,2,3,4),(1,2)(3,4));[128X[104X
    [4X[28X          Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X          gap> PointReflectionsOfOrigami(o);[128X[104X
    [4X[28X          [ (1,2)(3,4), (1,4)(2,3) ][128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XAutomorphismsOfOrigami[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YTwo  lists consisting of two entries: The first entry is a list of
            permutations and the second entry is 1 resp. -1.[133X
  
  [33X[0;0YComputes  all  automorphisms  of  the origami, i.e. the translations and the
  point  reflections.  More  precisely  it  returns  two lists. The first list
  contains  the  translations  and is labelel with 1. The second list contains
  the point reflections and is labeled with -1.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X          gap> o:=Origami((1,2,3,4),(1,2)(3,4));[128X[104X
    [4X[28X          Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X          gap> AutomorphismsOfOrigami(o);[128X[104X
    [4X[28X          [ [ [ (), (1,3)(2,4) ], 1 ], [ [ (1,2)(3,4), (1,4)(2,3) ], -1 ] ][128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XFixedPointsOfPointReflections[102X( [3XO[103X, [3Xsigma[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA  list  of fixed points. The fixed points are given as lists with
            three entries.[133X
  
  [33X[0;0YThis  function  computes  the  fixed  points  of a point reflection [22XÏƒ[122X of the
  origami  [22XO[122X  given as permutation of its squares. The function does not check
  whether   [22XÏƒ[122X  is  a  point  reflection,  i.e.  whether  it  satisfies  [22XÏƒâˆ˜Ïƒ_xâˆ˜
  Ïƒ^-1=Ïƒ_x^-1[122X and [22XÏƒâˆ˜ Ïƒ_yâˆ˜ Ïƒ^-1=Ïƒ_y^-1[122X. The fixed points are returned in a list
  with  entries [22X[a,b,c][122X, where [22Xa[122X is the square in which the fixed point occurs
  and  [22X(b,c)[122X  are the local coordinates in the square [22Xa[122X and for the lower left
  corners [22Xa[122X is a representative of the connected lower left corners.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> origami:=Origami((1,2,3,4),(1,2)(3,4));[128X[104X
    [4X[28X      Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X      gap> sigma:=PointReflectionsOfOrigami(origami)[1];[128X[104X
    [4X[28X      (1,2)(3,4)[128X[104X
    [4X[28X      gap> FixedPointsOfPointReflections(origami, sigma);[128X[104X
    [4X[28X      [ [ 2, 0, 0.5 ], [ 4, 0, 0.5 ], [ 1, 0.5, 0 ], [ 2, 0.5, 0 ], [ 3, 0.5, 0 ], [ 4, 0.5, 0 ] ][128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XFixedPointsOfTranslation[102X( [3XO[103X, [3Xsigma[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA  list  of  fixed  points. The fixed points are given as lists of
            vertices.[133X
  
  [33X[0;0YThis  function computes the fixed points of a translation [22XÏƒ[122X of the origami [22XO[122X
  given  as permutations of its squares. The function does not check whether [22XÏƒ[122X
  is  a  translation,  i.e.  whether  it satisfies [22XÏƒâˆ˜Ïƒ_xâˆ˜ Ïƒ^-1=Ïƒ_x[122X and [22XÏƒâˆ˜ Ïƒ_yâˆ˜
  Ïƒ^-1=Ïƒ_y[122X.  The  fixed  points  of  a  translation are always vertices of the
  squares. Each fixed point is returned as list of vertices, more precisely as
  the  labels  of  all squares such that the corresponding vertex is the fixed
  point.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X            gap> origami:=Origami((1,2,3,4),(1,2)(3,4));[128X[104X
    [4X[28X      Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X      gap> TranslationsOfOrigami(origami);[128X[104X
    [4X[28X      [ (), (1,3)(2,4) ][128X[104X
    [4X[28X      gap> sigma:=TranslationsOfOrigami(origami)[2];[128X[104X
    [4X[28X      (1,3)(2,4)[128X[104X
    [4X[28X      gap> FixedPointsOfTranslation(origami, sigma);[128X[104X
    [4X[28X      [ [ 1, 3 ], [ 2, 4 ] ][128X[104X
    [4X[28X    [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XFixedPointsOfAutomorphism[102X( [3XO[103X, [3Xsigma[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YA  list  of  fixed  points.  The  fixed points are presened in the
            format  corresponding  of  the  type,  i.e.  the format depends on
            whether the automorphism is a translation or a point reflection.[133X
  
  [33X[0;0YThis  function computes the fixed points of an automorphism [22XÏƒ[122X of the origami
  [22XO[122X.  If  sigma is a point reflection, the fixed points are returned in a list
  with  entries  [22X[[a,b,c],d][122X,  where  [22Xa[122X is the square in which the fixed point
  occurs, [22X(b,c)[122X are the local coordinates in the square and [22Xd[122X is [22X-1[122X. If [22XÏƒ[122X is a
  translation it is returned as list of vertices labeled with 1.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:=Origami((1,2,3,4),(1,2)(3,4));[128X[104X
    [4X[28X      Origami((1,2,3,4), (1,2)(3,4), 4)[128X[104X
    [4X[28X      gap> sigma:=(1,3)(2,4);[128X[104X
    [4X[28X      (1,3)(2,4)[128X[104X
    [4X[28X      gap> FixedPointsOfAutomorphism(O,sigma);[128X[104X
    [4X[28X      [ [ [ 1, 3 ], [ 2, 4 ] ], 1 ][128X[104X
    [4X[28X  [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XGenusOfQuotient[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn integer.[133X
  
  [33X[0;0YFor  a  given  origami  this  function  computes  the  genus of the quotient
  [22XO/Trans(O)[122X, where [22XTrans(O)[122X is the translation group.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:=Origami((1,2,3)(4,5,6),(3,4));[128X[104X
    [4X[28X      Origami((1,2,3)(4,5,6), (3,4), 6)[128X[104X
    [4X[28X      gap> GenusOfQuotient(O);[128X[104X
    [4X[28X      1[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
  [33X[1;0Y[29X[2XOrigamiQuotient[102X( [3XO[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10YAn origami[133X
  
  [33X[0;0YFor  a given origami this function computes the quotient origami [22XO/Trans(O)[122X,
  where [22XTrans(O)[122X is the translation group.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[28X      [128X[104X
    [4X[28X      gap> O:=Origami((1,2,3)(4,5,6),(3,4));[128X[104X
    [4X[28X      Origami((1,2,3)(4,5,6), (3,4), 6)[128X[104X
    [4X[28X      gap> OrigamiQuotient(O);[128X[104X
    [4X[28X      Origami((1,2,3), (), 3)[128X[104X
    [4X[28X      [128X[104X
    [4X[28X    [128X[104X
  [4X[32X[104X
  
