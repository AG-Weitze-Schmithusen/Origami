<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_cyclic-torus-covers">
<Heading>Cyclic Torus Covers</Heading>

<Section Label="Chapter_Cyclic_Torus_Covers_Section_Cyclic_Torus_Covers_functions">
<Heading>Cyclic Torus Covers functions</Heading>

<ManSection>
  <Func Arg="n d hslits vslits" Name="CyclicTorusCover" />
 <Returns>a cyclic torus cover origami
</Returns>
 <Description>
A cyclic torus cover consists of d copies of the trivial origami E[n]. Each of the n^2 fields of E[n]
gets assigned a label from 1 to n^2 row-wise from left to right and bottom up. Let f be a field with the label
k in the i-th copy of the cyclic torus cover. Then f's right neighbour's label is determined by determining the
usual right neighbour in E[n] and its copy is ((i+vslits[k]) mod d). The same goes for the upper neighbour and
hslits.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n d vslits hslits" Name="CyclicMonodromy" />
 <Returns>the monodromy of the cyclic torus cover described by the given arguments
</Returns>
 <Description>
Since the fundamental group is generated by
<List>
<Item>
the horizontal path starting in the lower left field
</Item>
<Item>
the vertical path starting in the lower left field
</Item>
<Item>
for each of the n^2 corner points, the cycle around this point
we can uniquely determine the monodromy by just giving its values at these 2+n^2 points. Thus
the function returns an 2+n^2 vector, having the values as described above.
</Item>
</List>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n d vslits hslits" Name="RamificationIndices" />
 <Returns>the ramification indices for each of the n^2 fields
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Cyclic_Torus_Covers_Section_Comb_Origami_functions">
<Heading>Comb Origami functions</Heading>

<ManSection>
  <Func Arg="n x y" Name="CombOrigami" />
 <Returns>a comb origami, which is a cyclic torus cover of degree 2 specified by a single point P=(x,y)
</Returns>
 <Description>
A comb origami is a special cyclic torus cover of degree 2, specified by a single point P
on E[n]. The coordinates are given in the range {0,..,n-1}^2, where the
point (0,0) is located in the lower left corner. P must not be a 2-torsion point, that is, it must not be
(0,0), (n/2, n/2), (n/2,0) or (0,n/2). The coordinates are considered modulo n.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n" Name="BaseChangeSToB" />
 <Returns>a matrix M representing a change of base between the bases S and B.
</Returns>
 <Description>
The matrix M has the following property: For any origami, let v be the monodromy vector representation of
that origami with respect to B and w be the representation with respect to S. Then we have w = v*M.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n" Name="TranslationGroup" />
 <Returns>the group of translations (as matrices) acting on monodromy vectors.
</Returns>
 <Description>
The group that is generated by the matrices representing the translation by one square to the right
and the translation by one square up.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n" Name="ActionOfTOnHomologyOfTn" />
 <Returns>a matrix representing the action of the generator T of Sl2Z on the homology of the (n*n)-torus.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n" Name="ActionOfSOnHomologyOfTn" />
 <Returns>a matrix representing the action of the generator S of Sl2Z on the homology of the (n*n)-torus.
</Returns>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n A" Name="ActionOfMatrixOnHomologyOfTn" />
 <Returns>a matrix representing the action of A on the homology of the (n*n)-torus.
</Returns>
 <Description>
A must be in SL2Z. It is written as a word in the generators S and T of SL2Z, then the corresponding
word with the matrices calculated by ActionOfTOnHomologyOfTn and ActionOfSOnHomologyOfTn is taken and returned.
 </Description>
</ManSection>


<ManSection>
  <Func Arg="n p H" Name="SearchForOrigamiWithVeechGroup" />
 <Returns>a vector in Z/pZ with n*n+1 entries representing (as a monodromy representation with respect to base S) an origami that has H as a veech group or false if no such vector is found.
</Returns>
 <Description>
H must be a congruence subgroup of level p.
 </Description>
</ManSection>


</Section>


</Chapter>

