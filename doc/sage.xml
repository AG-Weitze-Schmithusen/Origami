<Chapter Label="Sage">
<Heading>SageMath and the surface_dynamics package</Heading>
The SageMath package <E>surface_dynamics</E> by Vincent Delecroix <Cite Key="surface_dynamics"/> implements functions to study origamis in Sage.
We provide a small interface to use these methods from &GAP;. An installation of Sage together with the <E>surface_dynamics</E> package and the &GAP; packages <Package>HomalgToCAS</Package>, <Package>IO_ForHomalg</Package>, <Package>IO</Package> and <Package>RingsForHomalg</Package> are needed.

<Section>
<Heading>SageMath functions</Heading>

The following descriptions and examples
are mainly taken from the manual of <Cite Key="surface_dynamics"/>.

<ManSection>
  
  <Func Name="VeechgroupBySage" Arg="O"/>
  <Returns>A subgroup of <M>SL_2(\mathbb Z)</M>.</Returns>
  <Description>
  	This function executes the SageMath method <C>veech_group</C> and returns its result as a &GAP; object.
  </Description>
  
  <Func Name="IsHyperellipticBySage" Arg="O"/>
  <Returns>A boolean.</Returns>
  <Description>
  	Checks whether or not the origami <A>O</A> is hyperelliptic.
  </Description>
  
  <Func Name="IsPrimitiveBySage" Arg="O"/>
  <Returns>A boolean.</Returns>
  <Description>
  	Checks whether or not the origami <A>O</A> is primitive. An origami is called primitive, if it does not cover another origami, or equivalently if the action of the monodromy group has no non-trivial block.
  </Description>
  
  <Func Name="ReduceBySage" Arg="O"/>
  <Returns>An Origami.</Returns>
  <Description>
  	Returns a reduced origami isomorphic (up to <M>SL(2,\mathbb{Q})</M> action) to <A>O</A>.
    <Example>
      gap> ReduceBySage(Origami((1,2)(3,4), (1,3,5,6)(2,4) ));
      Origami((1,2), (1,3), 6)
    </Example>
  </Description>
  
  <Func Name="AbsolutePeriodGeneratorsBySage" Arg="O"/>
  <Returns>A list of lists of integers.</Returns>
  <Description>
  	Returns a generating set of the absolute periods of <A>O</A>. To each curve on an origami, we can associate its holonomy (that is an element of <M> \mathbb{Z} \times \mathbb{Z}</M>). This function returns a generating set of the module generated by holonomies of closed curves.
    <Example>
      gap> AbsolutePeriodGeneratorsBySage(Origami((1,2,3,4)(5,6), (1,5)(2,6) ));
      [ [ 2, 0 ], [ 2, 0 ], [ 0, 1 ], [ 0, 1 ] ]
    </Example>
  </Description>
  
  <Func Name="LatticeOfAbsolutePeriodsBySage" Arg="O"/>
  <Returns>A list of lists of integers.</Returns>
  <Description>
  	Returns <M>(a,t,u)</M> where <M>((a,0),(t,u))</M> is a standard basis for the lattice of the absolute periods of <A>O</A>. The lattice of periods of an origami is the sublattice of <M>\mathbb{Z}^2</M> generated by the holonomy vectors of its saddle connections. Any sublattice of <M>\mathbb{Z}^2</M> has a standard basis consisting of a horizontal vector <M>(a,0)</M> and a non horizontal vector <M>(t,u)</M>, where <M>a, t, u</M> are integers satisfying <M>0 &lt; t &lt; a</M> and <M>0 &lt; t</M>.
    <Example>
      gap> LatticeOfAbsolutePeriodsBySage(Origami((1,2)(3,4), (2,3) ));
      [ [ 2, 0 ], [ 0, 1 ] ]
    </Example>
  </Description>
  
  <Func Name="OptimalDegreeBySage" Arg="O"/>
  <Returns>An integer.</Returns>
  <Description>
  	Computes the optimal degree of <A>O</A>. The optimal degree of an origami is the degree of the map to the largest torus. Any origami <M>X \rightarrow T</M> factors as <M>i \circ \pi_{opt}</M> where i is an isogeny. The optimal degree is the degree of <M>\pi_{opt}</M>.
    <Example>
      gap> OptimalDegreeBySage(Origami((1,2)(3,4), (2,3) ));
      2
    </Example>
  </Description>
  
  <Func Name="PeriodGeneratorsBySage" Arg="O"/>
  <Returns>A list of lists of integer.</Returns>
  <Description>
  	Return a list of periods that generate the lattice of periods.
    <Example>
      gap> PeriodGeneratorsBySage(Origami((1,3,6)(2,5,7)(4),(1,2,4,3,5,6,7) ));
      [ [ 2, 0 ], [ 1, 0 ], [ 1, 0 ], [ 0, 2 ], [ -1, 2 ], [ 0, 1 ] ]
    </Example>
  </Description>
  
  

  <Func Name="WidthsAndHeightsBySage" Arg="O"/>
  <Returns>A list of lists of integers.</Returns>
  <Description>
  	Return the list of widths and heights of cylinders in <A>O</A>.
    <Example>
      gap> WidthsAndHeightsBySage(Origami((1,2)(3,4),(1,3,5,6)(2,4) ));
      [ [ 1, 2 ], [ 2, 2 ] ]
    </Example>
  </Description>
  
  <Func Name="SumOfLyapunovExponentsBySage" Arg="O"/>
  <Returns>A rational number.</Returns>
  <Description>
  	Computes the sum of Lyapunov exponents for <A>O</A>.
    <Example>
      gap> SumOfLyapunovExponentsBySage(Origami((1,2)(3,4),(2,3) ));
      3/2
    </Example>
  </Description>
  
  <Func Name="IntermediateCoversBySage" Arg="O"/>
  <Description>
  	Returns the list of intermediate covers of this origami. Not yet implemented.
  </Description>
  
</ManSection>

</Section>

</Chapter>
